# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: minio-ns
---
apiVersion: v1
kind: Service
metadata:
  name: minio-hsvc
  namespace: minio-ns
spec:
  clusterIP: None
  selector:
    app: minio
  ports:
  - port: 9000
    targetPort: 9000
    name: data-port
  - port: 9090
    targetPort: 9090
    name: console-port
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-config
  namespace: minio-ns
  labels:
    app: minio
data:
  MINIO_ROOT_USER: admin
  MINIO_DATA_DIR: /data
  MINIO_DISTRIBUTED_MODE_ENABLED: "yes"
  MINIO_DISTRIBUTED_NODES: minio-sts-0.minio-hsvc.minio-ns.svc.cluster.local,minio-sts-1.minio-hsvc.minio-ns.svc.cluster.local,minio-sts-2.minio-hsvc.minio-ns.svc.cluster.local,minio-sts-3.minio-hsvc.minio-ns.svc.cluster.local
  MINIO_API_PORT_NUMBER: "9000"
  MINIO_CONSOLE_PORT_NUMBER: "9090"
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: minio-ns
  labels:
    app: minio
data:
  MINIO_ROOT_PASSWORD: cGFzc3dvcmQ= # password
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-sts
  namespace: minio-ns
  labels:
    app: minio
spec:
  replicas: 4
  serviceName: minio-hsvc
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: minio-container
        image: bitnami/minio:2024.8.29
        imagePullPolicy: IfNotPresent
        env:
        - name: BITNAMI_DEBUG
          value: 'true'
        envFrom:
        - configMapRef:
            name: minio-config
        - secretRef:
            name: minio-secret
        ports:
        - containerPort: 9000
          name: api-port
        - containerPort: 9090
          name: console-port
        volumeMounts:
        - name: data-volume
          mountPath: /data
        resources:
          requests:
            cpu: "200m"
            memory: "250M"
          limits:
            cpu: "200m"
            memory: "250M"
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: api-port
          timeoutSeconds: 5
          failureThreshold: 1
          initialDelaySeconds: 60
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: api-port
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
          initialDelaySeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: data-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: do-block-storage-retain
---
apiVersion: v1
kind: Service
metadata:
  name: minio-api
  namespace: minio-ns
spec:
  type: ClusterIP
  selector:
    app: minio
  ports:
  - port: 9000
    targetPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: minio-console
  namespace: minio-ns
spec:
  type: ClusterIP
  selector:
    app: minio
  ports:
  - port: 9090
    targetPort: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-api-ing
  namespace: minio-ns
  labels:
    app: minio
  annotations:
    nginx.ingress.kubernetes.io/limit-rps: "5"
    nginx.ingress.kubernetes.io/limit-rpm: "300"
spec:
  ingressClassName: nginx
  rules:
  - host: data-167.172.7.185.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-api
            port: 
              number: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-console-ing
  namespace: minio-ns
  labels:
    app: minio
spec:
  ingressClassName: nginx
  rules:
  - host: console-167.172.7.185.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-console
            port: 
              number: 9090